{"version":3,"sources":["ballot-demo-data.js","instant-runoff.js","candidate.js","ballot-grid.js","result-message.js","leader-board.js","App.js","index.js"],"names":["simpleRandom","split","slice","choiceCount","ballotCount","candidates","idLength","toString","length","Array","fill","map","_","i","votes","reduce","state","Math","floor","random","availableCandidates","splice","selectedCandidate","push","id","padStart","calculateLeaders","counted","leaders","c","l","Object","entries","candidate","voteCount","votePercentage","sort","a","b","performInstantRunoff","ballots","maxRunOffs","runOff","step","losers","nextBallots","ballot","nextVotes","indexOf","shift","filter","removeLoser","stages","lastRound","winner","undefined","finalLeader","fromBehind","Candidate","className","style","display","width","BallotGrid","onRemove","title","onClick","ResultMessage","result","runoff_intro","toFixed","LeaderBoard","QuickInfo","children","role","App","allCandidates","defaultSettings","candidatesInTheRunning","fromEntries","React","useState","settings","setSettings","setResult","tabId","setTabId","href","target","rel","fn","predicate","maxTries","tries","console","log","applyUntil","BallotDemoData","r","type","checked","onChange","e","min","max","value","parseInt","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.cbf307fb.chunk.js","sourcesContent":["var candidates = \"🐸,🐰,🐙,🐵,🐼,🦊,🐴,\".split(\",\").slice(0, 6);\r\n//🐮,🐶,,🐭\r\nvar simpleRandom = (choiceCount, ballotCount, candidates) => {\r\n\tconst idLength = ballotCount.toString().length;\r\n\treturn Array(ballotCount)\r\n\t\t.fill()\r\n\t\t.map(\r\n\t\t\t(_, i) => {\r\n\t\t\t\tvar votes = Array(choiceCount)\r\n\t\t\t\t\t.fill()\r\n\t\t\t\t\t.reduce(\r\n\t\t\t\t\t\t(state) => {\r\n\t\t\t\t\t\t\tlet i = Math.floor(\r\n\t\t\t\t\t\t\t\tMath.random() * state.availableCandidates.length\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tlet [selectedCandidate] = \r\n\t\t\t\t\t\t\t\tMath.random() < 0.0\r\n\t\t\t\t\t\t\t\t? ['']\r\n\t\t\t\t\t\t\t\t//a voter may not vote for any one candidate more than once.\r\n\t\t\t\t\t\t\t\t: state.availableCandidates.splice(i, 1);\r\n\t\t\t\t\t\t\tstate.votes.push(selectedCandidate);\r\n\t\t\t\t\t\t\treturn state;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tvotes: [],\r\n\t\t\t\t\t\t\tavailableCandidates: candidates.slice(0)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t).votes;\r\n\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tid: (i+1).toString().padStart(idLength,\"0\"),\r\n\t\t\t\t\t\tvotes\r\n\t\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n}\r\nvar emojiAnimals = (choiceCount, ballotCount) => simpleRandom(choiceCount, ballotCount, candidates);\r\n\r\nexport default {\r\n\temojiAnimals,\r\n\tsimpleRandom\r\n};\r\n\r\n/*\r\n\r\n🐻🐱🐯🐷\r\n🙈 See-No-Evil Monkey\r\n🙉 Hear-No-Evil Monkey\r\n🙊 Speak-No-Evil Monkey\r\n🐒 Monkey\r\n🦍 Gorilla\r\n🦧 Orangutan\r\n🐶 Dog Face\r\n🐕 Dog\r\n🦮 Guide Dog\r\n🐕‍🦺 Service Dog\r\n🐩 Poodle\r\n🐺 Wolf\r\n🦊 Fox\r\n🦝 Raccoon\r\n🐱 Cat Face\r\n🐈 Cat\r\n🐈‍⬛ Black Cat\r\n🦁 Lion\r\n🐯 Tiger Face\r\n🐅 Tiger\r\n🐆 Leopard\r\n🐴 Horse Face\r\n🐎 Horse\r\n🦄 Unicorn\r\n🦓 Zebra\r\n🦌 Deer\r\n🦬 Bison\r\n Cow Face\r\n🐂 Ox\r\n🐃 Water Buffalo\r\n🐄 Cow\r\n🐖 Pig\r\n🐗 Boar\r\n🐽 Pig Nose\r\n🐏 Ram\r\n🐑 Ewe\r\n🐐 Goat\r\n🐪 Camel\r\n🐫 Two-Hump Camel\r\n🦙 Llama\r\n🦒 Giraffe\r\n🐘 Elephant\r\n🦣 Mammoth\r\n🦏 Rhinoceros\r\n🦛 Hippopotamus\r\n🐭 Mouse Face\r\n🐁 Mouse\r\n🐀 Rat\r\n🐹 Hamster\r\n\r\n🐇 Rabbit\r\n🐿️ Chipmunk\r\n🦫 Beaver\r\n🦔 Hedgehog\r\n🦇 Bat\r\n Bear\r\n🐻‍❄️ Polar Bear\r\n🐨 Koala\r\n🐼 Panda\r\n🦥 Sloth\r\n🦦 Otter\r\n🦨 Skunk\r\n🦘 Kangaroo\r\n🦡 Badger\r\n🐾 Paw Prints\r\n🦃 Turkey\r\n🐔 Chicken\r\n🐓 Rooster\r\n🐣 Hatching Chick\r\n🐤 Baby Chick\r\n🐥 Front-Facing Baby Chick\r\n🐦 Bird\r\n🐧 Penguin\r\n🕊️ Dove\r\n🦅 Eagle\r\n🦆 Duck\r\n🦢 Swan\r\n🦉 Owl\r\n🦤 Dodo\r\n🪶 Feather\r\n🦩 Flamingo\r\n🦚 Peacock\r\n🦜 Parrot\r\n\r\n🐊 Crocodile\r\n🐢 Turtle\r\n🦎 Lizard\r\n🐍 Snake\r\n🐲 Dragon Face\r\n🐉 Dragon\r\n🦕 Sauropod\r\n🦖 T-Rex\r\n🐳 Spouting Whale\r\n🐋 Whale\r\n🐬 Dolphin\r\n🦭 Seal\r\n🐟 Fish\r\n🐠 Tropical Fish\r\n🐡 Blowfish\r\n🦈 Shark\r\n🐙 Octopus\r\n🐚 Spiral Shell\r\n🐌 Snail\r\n🦋 Butterfly\r\n🐛 Bug\r\n🐜 Ant\r\n🐝 Honeybee\r\n🪲 Beetle\r\n🐞 Lady Beetle\r\n🦗 Cricket\r\n🪳 Cockroach\r\n🕷️ Spider\r\n🕸️ Spider Web\r\n🦂 Scorpion\r\n🦟 Mosquito\r\n🪰 Fly\r\n🪱 Worm\r\n🦠 Microbe\r\n💐 Bouquet\r\n🌸 Cherry Blossom\r\n💮 White Flower\r\n🏵️ Rosette\r\n🌹 Rose\r\n🥀 Wilted Flower\r\n🌺 Hibiscus\r\n🌻 Sunflower\r\n🌼 Blossom\r\n🌷 Tulip\r\n🌱 Seedling\r\n🪴 Potted Plant\r\n🌲 Evergreen Tree\r\n🌳 Deciduous Tree\r\n🌴 Palm Tree\r\n🌵 Cactus\r\n🌾 Sheaf of Rice\r\n🌿 Herb\r\n☘️ Shamrock\r\n🍀 Four Leaf Clover\r\n🍁 Maple Leaf\r\n🍂 Fallen Leaf\r\n🍃 Leaf Fluttering in Wind\r\n🍄 Mushroom\r\n🌰 Chestnut\r\n🦀 Crab\r\n🦞 Lobster\r\n🦐 Shrimp\r\n🦑 Squid\r\n🌍 Globe Showing Europe-Africa\r\n🌎 Globe Showing Americas\r\n🌏 Globe Showing Asia-Australia\r\n🌐 Globe with Meridians\r\n🪨 Rock\r\n🌑 New Moon\r\n🌒 Waxing Crescent Moon\r\n🌓 First Quarter Moon\r\n🌔 Waxing Gibbous Moon\r\n🌕 Full Moon\r\n🌖 Waning Gibbous Moon\r\n🌗 Last Quarter Moon\r\n🌘 Waning Crescent Moon\r\n🌙 Crescent Moon\r\n🌚 New Moon Face\r\n🌛 First Quarter Moon Face\r\n🌜 Last Quarter Moon Face\r\n☀️ Sun\r\n🌝 Full Moon Face\r\n🌞 Sun with Face\r\n⭐ Star\r\n🌟 Glowing Star\r\n🌠 Shooting Star\r\n☁️ Cloud\r\n⛅ Sun Behind Cloud\r\n⛈️ Cloud with Lightning and Rain\r\n🌤️ Sun Behind Small Cloud\r\n🌥️ Sun Behind Large Cloud\r\n🌦️ Sun Behind Rain Cloud\r\n🌧️ Cloud with Rain\r\n🌨️ Cloud with Snow\r\n🌩️ Cloud with Lightning\r\n🌪️ Tornado\r\n🌫️ Fog\r\n🌬️ Wind Face\r\n🌈 Rainbow\r\n☂️ Umbrella\r\n☔ Umbrella with Rain Drops\r\n⚡ High Voltage\r\n❄️ Snowflake\r\n☃️ Snowman\r\n⛄ Snowman Without Snow\r\n☄️ Comet\r\n🔥 Fire\r\n💧 Droplet\r\n🌊 Water Wave\r\n🎄 Christmas Tree\r\n✨ Sparkles\r\n🎋 Tanabata Tree\r\n🎍 Pine Decoration\r\n*/","const removeLoser = (losers,ballots) => {\r\n  //console.log(`advancing ballots for \"${losers[losers.length-1]}\"`);\r\n  const newBallots = ballots.map(ballot => {\r\n    var nextVotes = ballot.votes.slice(0);\r\n    while(losers.indexOf(nextVotes[0]) > -1 && nextVotes.length > 0){\r\n      nextVotes.shift();\r\n    }\r\n    //console.log(`nextVote=${nextVote} loser=${loser} same? = ${nextVote === loser}`);\r\n    return {...ballot, votes: nextVotes };\r\n  });\r\n\r\n  return newBallots.filter(b => b.votes.length > 0);\r\n};\r\n\r\nconst calculateLeaders = (votes) => {\r\n  let counted = votes.reduce((leaders, c) => {\r\n    let l = leaders[c] || 0;\r\n    leaders[c] = l + 1;\r\n    return leaders;\r\n  }, {});\r\n  return Object.entries(counted)\r\n    .map(([candidate, voteCount]) => ({\r\n      candidate: candidate === \"null\" ? null : candidate,\r\n      voteCount,\r\n      votePercentage: (voteCount / votes.length) * 100\r\n    }))\r\n    .sort((a, b) => b.voteCount - a.voteCount);\r\n};\r\n\r\nvar performInstantRunoff = (ballots, maxRunOffs) => {\r\n\tif(ballots.length === 0 ){\r\n\t\treturn [];\r\n\t}\r\n  var runOff = step => {\r\n    var losers = [...step.losers, step.leaders[step.leaders.length-1].candidate];\r\n    var nextBallots = removeLoser(losers,step.ballots);\r\n    var leaders = calculateLeaders(nextBallots.map(b => b.votes[0]));\r\n    return {\r\n      ballots: nextBallots,\r\n      losers,\r\n      leaders\r\n    };\r\n  };\r\n\r\n  var stages = [\r\n    {\r\n      ballots,\r\n      losers: [],\r\n      leaders: calculateLeaders(ballots.map(b => b.votes[0]))\r\n    }\r\n  ];\r\n  for(var i=0; i<maxRunOffs; i++){\r\n    var lastRound = stages[stages.length - 1];\r\n    if(!!lastRound.leaders[0] && lastRound.leaders[0].votePercentage < 50){\r\n      stages.push(runOff(lastRound));\r\n    }\r\n  }\r\n\r\n\tvar winner = undefined;\r\n  if (stages.length > 0) {\r\n\t\tvar finalStage = stages[stages.length - 1];\r\n\t\tvar finalLeader = finalStage.leaders[0];\r\n\t\tif (finalLeader && finalLeader.votePercentage > 50) {\r\n\t\t\twinner = {\r\n\t\t\t\t...finalLeader,\r\n\t\t\t\tfromBehind: stages[0].leaders[0].candidate !== finalLeader.candidate\r\n\t\t\t}\r\n\t\t}\r\n  }\r\n\treturn {\r\n\t\tstages,\r\n\t\twinner\r\n\t};\r\n};\r\n\r\nexport {performInstantRunoff};","const Candidate = (c) => (\r\n  <div\r\n    key={c}\r\n    className=\"is-size-3 has-text-centered\"\r\n    style={{ display: \"inline-block\", width: \"1.33em\" }}\r\n  >\r\n    {!!c ? c : /*\"❓\"*/ \"🚫\"}\r\n  </div>\r\n);\r\nexport default Candidate;\r\n","import Candidate from \"./candidate\";\r\n\r\nconst BallotGrid = ({ ballots, onRemove }) => (\r\n  <div className=\"columns is-multiline\">\r\n    {ballots.map((b, i) => (\r\n      <div className=\"column m-0\" key={b.id}>\r\n        <div className=\"box p-3\">\r\n          <div className=\"level\">\r\n            <div className=\"level-left\">\r\n              <span className=\"tag\">#{b.id}</span>\r\n              {b.votes.map(Candidate)}\r\n              {!!onRemove && (\r\n                <button\r\n                  className=\"delete\"\r\n                  title=\"Remove this ballot from the election\"\r\n                  onClick={() => onRemove(b.id)}\r\n                ></button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    ))}\r\n  </div>\r\n);\r\n\r\nexport default BallotGrid;\r\n","import Candidate from \"./candidate\";\r\nconst ResultMessage = ({ result }) => {\r\n  var runoff_intro = (\r\n    <>\r\n      After <strong>{result.stages.length - 1}</strong> instant run-off\r\n      {result.stages.length - 1 === 1 ? \"\" : \"s\"}\r\n    </>\r\n  );\r\n  return !!result.winner ? (\r\n    <article className=\"message is-success\">\r\n      <div className=\"message-header\">\r\n        <p>We have a winner!</p>\r\n      </div>\r\n      <div className=\"message-body\">\r\n        {runoff_intro}, this election goes to {Candidate(result.winner.candidate)}\r\n        with {result.winner.voteCount} votes (\r\n        {result.winner.votePercentage.toFixed(2)}% of all votes).\r\n        {result.winner.fromBehind && <strong className=\"ml-2\">This candidate came from behind!</strong>}\r\n      </div>\r\n    </article>\r\n  ) : (\r\n    <article className=\"message is-danger\">\r\n      <div className=\"message-header\">\r\n        <p>Undecided</p>\r\n      </div>\r\n      <div className=\"message-body\">\r\n        {runoff_intro}, this election is undecided. Nobody got &gt;50% of the vote!\r\n      </div>\r\n    </article>\r\n  );\r\n};\r\nexport default ResultMessage;\r\n","import Candidate from \"./candidate\";\r\nconst LeaderBoard = ({ leaders }) => (\r\n  <table className=\"table is-striped is-bordered has-text-centered\">\r\n    <thead>\r\n      <tr>\r\n        <th>Place</th>\r\n        <th>Candidate</th>\r\n        <th>Votes</th>\r\n        <th>%</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      {leaders.map((l, i) => (\r\n        <tr key={i}>\r\n          <td>{i + 1}</td>\r\n          <td>{Candidate(l.candidate)}</td>\r\n          <td>{l.voteCount}</td>\r\n          <td>{l.votePercentage.toFixed(1)}</td>\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  </table>\r\n);\r\nexport default LeaderBoard;\r\n","import React from \"react\";\r\nimport BallotDemoData from \"./ballot-demo-data\";\r\nimport { performInstantRunoff } from \"./instant-runoff\";\r\nimport { LeaderBoard, Candidate, BallotGrid, ResultMessage } from \"./ui\";\r\n\r\nconst arrayWithoutItemAtIndex = (arr, ix) => [\r\n  ...arr.slice(0, ix),\r\n  ...arr.slice(ix + 1)\r\n];\r\n\r\nconst applyUntil = (fn,predicate,maxTries) => {\r\n  var tries=0;\r\n  var result;\r\n  while(tries < maxTries) {\r\n    tries++;\r\n    console.log('try #' + tries);\r\n    result = fn();\r\n    if(predicate(result)){\r\n      return result;\r\n    }\r\n  } \r\n  return result;\r\n};\r\n\r\nconst QuickInfo = ({children}) =>\r\n  <article className=\"message is-info\">\r\n    <div className=\"message-body\">\r\n      <span className=\"icon\" role=\"img\" aria-label=\"info\">\r\n        ℹ️\r\n      </span>\r\n      {children}\r\n    </div>\r\n  </article>;\r\n\r\nexport default function App() {\r\n  var allCandidates = \"🐸,🐰,🐙,🐵,🐼,🦊,🐴,🐮,🐶,🐭\".split(\",\");\r\n  const defaultSettings = () => ({\r\n    candidatesInTheRunning: Object.fromEntries(allCandidates.map((c,i) => [c, i <= 2])),\r\n    choiceCount: 2,\r\n    ballotCount: 200\r\n  });\r\n  const [settings, setSettings] = React.useState(defaultSettings());\r\n  const candidates = allCandidates.filter((c) => settings.candidatesInTheRunning[c]);\r\n  const genBallots = () => BallotDemoData.simpleRandom(settings.choiceCount, settings.ballotCount, candidates);\r\n  const [result, setResult] = React.useState(undefined);\r\n  const [tabId, setTabId] = React.useState(0);\r\n\r\n  const reset = () => {\r\n    setResult(null);\r\n    setSettings(defaultSettings());\r\n  }\r\n\r\n  const generate = () => {\r\n    //it's most interesting to see a candidate emerge from behind in a run-off...\r\n    var result = applyUntil(\r\n      () => performInstantRunoff(genBallots(), 10),\r\n      r => !!r.winner && r.winner.fromBehind,\r\n      2\r\n    );\r\n    setResult(result);\r\n    setTabId(result.stages.length - 1);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container is-fluid mt-5\">\r\n      <a href=\"https://forms.gle/4m8ih2JKVVZCKtq96\" target=\"_blank\" className=\"button is-info is-pulled-right\">\r\n        <span className=\"icon-text\">\r\n          <span className=\"icon mr-1\">👍</span>\r\n          Give feedback\r\n          <span className=\"icon ml-1\">👎</span>\r\n        </span>\r\n      </a>\r\n      <h1 className=\"title\">Ranked Choice Voting Simulator</h1>\r\n      <div className=\"content\">\r\n        Experiment with this simulator to better understand Ranked Choice Voting\r\n        (RCV) and instant run-off elections for single-winner races.{\" \"}\r\n        <a\r\n          href=\"https://www.fairvote.org/how_rcv_works\"\r\n          target=\"_blank\"\r\n          rel=\"noreferrer\"\r\n        >\r\n          More information\r\n          <span className=\"icon\" role=\"img\" aria-label=\"external link\">\r\n            ↗\r\n          </span>\r\n        </a>\r\n      </div>\r\n      <hr/>\r\n      <div>\r\n        <div className=\"level\">\r\n          <div>\r\n            <button className=\"button is-primary is-large\" onClick={generate}>\r\n              Simulate election\r\n            </button>\r\n            {!!result && <div className=\"has-text-centered\">\r\n              <button className=\"button is-text\" onClick={reset}>\r\n                Reset\r\n              </button>\r\n            </div>}\r\n          </div>\r\n          <div>\r\n            <strong>Candidates in the running</strong>\r\n            <div className=\"is-flex\">\r\n              {allCandidates.map((c) => (\r\n                <label key={c} className=\"checkbox has-text-centered\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={settings.candidatesInTheRunning[c]}\r\n                    onChange={(e) =>\r\n                      setSettings({\r\n                        ...settings,\r\n                        candidatesInTheRunning: {\r\n                          ...settings.candidatesInTheRunning,\r\n                          [c]: !settings.candidatesInTheRunning[c]\r\n                        }\r\n                      })\r\n                    }\r\n                  />\r\n                  <div>{Candidate(c)}</div>\r\n                </label>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <strong>Number of choices on a ballot</strong>\r\n            <br />\r\n            <input\r\n              className=\"mr-2\"\r\n              type=\"range\"\r\n              min=\"1\"\r\n              max=\"3\"\r\n              value={settings.choiceCount}\r\n              onChange={(e) => setSettings({...settings, choiceCount: parseInt(e.target.value, 10)})}\r\n            />\r\n            {settings.choiceCount}\r\n          </div>\r\n          <div>\r\n            <strong>Number of voters to simulate</strong>\r\n            <br />\r\n            <input\r\n              className=\"mr-2\"\r\n              type=\"range\"\r\n              step=\"50\"\r\n              min=\"50\"\r\n              max=\"1000\"\r\n              value={settings.ballotCount}\r\n              onChange={(e) => setSettings({...settings, ballotCount: parseInt(e.target.value, 10)})}\r\n            />\r\n            {settings.ballotCount}\r\n          </div>\r\n        </div>\r\n        {settings.choiceCount === 1 && (\r\n          <QuickInfo>\r\n            Traditional elections allow voters only a single choice.{\" \"}\r\n            <strong>\r\n              Enable 2 choices or more for a more interesting instant run-off election.\r\n            </strong>\r\n          </QuickInfo>\r\n        )}\r\n        \r\n        {candidates.length < 3 && (\r\n          <QuickInfo>\r\n            In traditional elections, it often feels like only 2 candidates\r\n            matter.{\" \"}\r\n            <strong>\r\n              Select at least 3 candidates for a more interesting instant run-off election\r\n            </strong>\r\n          </QuickInfo>\r\n        )}\r\n      </div>\r\n\r\n      <hr/>\r\n\r\n      {!!result && (\r\n        <>\r\n          <ResultMessage result={result} />\r\n\r\n          <div className=\"tabs is-toggle\">\r\n            <ul>\r\n              {result.stages.map((r, id) => (\r\n                <li className={tabId === id ? \"is-active\" : \"\"} key={id}>\r\n                  <a onClick={() => setTabId(id)}>\r\n                    {id === 0 ? \"Original results\" : `Instant Run-off #${id}`}\r\n                    {id === result.stages.length - 1 ? \" (Final)\" : \"\"}\r\n                  </a>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n\r\n          {[result.stages[tabId]]\r\n            .filter((r) => !!r)\r\n            .map((r, i) => (\r\n              <div key={i}>\r\n                <div className=\"mb-5\">\r\n                  Ballots considered VALID at this stage = {r.ballots.length}{\" \"}\r\n                  out of {result.stages[0].ballots.length}\r\n                </div>\r\n                <LeaderBoard leaders={r.leaders} />\r\n                {!!r.losers.length && (\r\n                  <div className=\"mb-5\">\r\n                    Candidates eliminated in previous stages :{\" \"}\r\n                    {r.losers.map(Candidate)}\r\n                  </div>\r\n                )}\r\n                <p className=\"mb-5\">Ballots as of this stage (with eliminated candidates removed):</p>\r\n                <BallotGrid ballots={r.ballots}/>\r\n              </div>\r\n            ))}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { StrictMode } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(\r\n  <StrictMode>\r\n    <App />\r\n  </StrictMode>,\r\n  rootElement\r\n);\r\n"],"sourceRoot":""}